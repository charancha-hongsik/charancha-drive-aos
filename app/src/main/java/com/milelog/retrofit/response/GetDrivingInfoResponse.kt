package com.milelog.retrofit.response

import com.milelog.activity.DetailDriveHistoryActivity
import com.milelog.retrofit.request.Address

data class GetDrivingInfoResponse (
    val id:String,
    val userId:String,
    val carId:String,
    val userCarId:String?,
    val createdAt:String,
    val updatedAt:String,
    val startTime:String,
    val endTime:String,
    val totalTime:Double,
    val totalDistance:Double,
    val maxSpeed:Double,
    val averageSpeed:Double,
    val highSpeedDrivingTime:Double,
    val highSpeedDrivingDistance:Double,
    val highSpeedDrivingMaxSpeed:Double,
    val highSpeedDrivingAverageSpeed:Double,
    val highSpeedDrivingDistancePercentage:Double,
    val highSpeedDrivingTimePercentage:Double,
    val lowSpeedDrivingTime:Double,
    val lowSpeedDrivingDistance:Double,
    val lowSpeedDrivingMaxSpeed:Double,
    val lowSpeedDrivingAverageSpeed:Double,
    val lowSpeedDrivingDistancePercentage:Double,
    val lowSpeedDrivingTimePercentage:Double,
    val etcSpeedDrivingTime:Double,
    val etcSpeedDrivingDistance:Double,
    val etcSpeedDrivingMaxSpeed:Double,
    val etcSpeedDrivingAverageSpeed:Double,
    val etcSpeedDrivingDistancePercentage:Double,
    val etcSpeedDrivingTimePercentage:Double,
    val constantSpeedDrivingTime:Double,
    val constantSpeedDrivingDistance:Double,
    val constantSpeedDrivingMaxSpeed:Double,
    val constantSpeedDrivingAverageSpeed:Double,
    val constantSpeedDrivingDistancePercentage:Double,
    val constantSpeedDrivingTimePercentage:Double,
    val stopTime:Double,
    val stopCount:Double,
    val stopTimePercentage:Double,
    val rapidAccelerationCount:Double,
    val rapidAccelerationDistance:Double,
    val rapidDecelerationCount:Double,
    val rapidDecelerationDistance:Double,
    val rapidStartCount:Double,
    val rapidStartDistance:Double,
    val rapidStopCount:Double,
    val rapidStopDistance:Double,
    val totalRapidCount:Double,
    val optimalDrivingDistance:Double,
    val optimalDrivingPercentage:Double,
    val harshDrivingDistance:Double,
    val harshDrivingPercentage:Double,
    val verification:String,
    val isActive:Boolean,
    val startAddress: Address?,
    val endAddress: Address?,
    val memo:String?,
    val type:String?,
    val userCar:UserCar?,
    val images:List<Image>?,
    val edits:Edits?
    ) : java.io.Serializable

data class Image(
    val createAt:String,
    val deletedAt:String,
    val updatedAt:String,
    val id:String,
    val key:String,
    val url:String,
    val mimetype:String,
    val name:String,
    val originalName:String,
    val size:String,
    val order:String,
    )

data class Edits(
    val id: String,
    val createdAt: String,
    val deletedAt: String?,
    val updatedAt: String,
    val type: String?, // Enum으로 사용할 수 있다면 수정 가능 (예: WORK)
    val totalDistance: Int?,
    val startAddress: String?,
    val endAddress: String?,
    val place: String?,
    val excludeRecord: Boolean
)